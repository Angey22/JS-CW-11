//! Пишем код для проверочного "ручного" запроса на добавление информации в нашу базу данных.

// Создаем переменную-объект с набором данных, которые нужно добавить в базу данных.
const newBook = {
    title: "Ручная тестовая книга по CSS",
    author: "Я",
    genres: ["CSS"],
    rating: 11,
}

// Создаем переменную "options" с обязательным набором настроек для осуществления "POST" запроса.
const options = {
  method: "POST",
  headers: {
    "Content-Type": "application/json"
  },
  body: JSON.stringify(newBook),
};

//! Пояснения набора настроек:
// - "method" - обязательное свойство, в котором указывается тип запроса серверу;
// - "headers" - обязательное свойство, в котором, в JSON формате, пишется набор заголовков запроса;
// - " body" - обязательное свойство, в котором необходимо, в формате строки, прописать данные отправляемые на сервер в запросе. В нашем примере, мы использовали метод "JSON.stringify()" для того, чтобы преобразовать объект "newBook" в строчный литерал и передать его вместе с запросом на сервер.

// Пишем код запроса на добавление соответствующей информации в базу данных.
// fetch('http://localhost:4040/books', options).then(res => res.json()).then(console.log);


//!==============================================================


//! Пишем код функции для типизации и автоматизации процедуры запроса - добавления информации на сервер.

// Создаем переменную-ссылку на "точку входа".
const BASE_URL = 'http://localhost:4040';

// Пишем код функции, которая будет принимать объект, конвертировать его в JSON формат и отправлять запросом на сервер.
function addBook(book) {
  const options = {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify(book),
  };

  return fetch(`${BASE_URL}/books`, options).then(res => res.json());
}

// Активируем функцию "addBook".
// addBook({
//   title: 'Тестовая книга по CSS',
//   author: 'Я',
//   genres: ['CSS'],
//   rating: 9,
// })
//   .then(console.log)
//   .catch(error => console.log(error));


// Пишем код вспомогательной функции для визуализации ответа сервера после успешного запроса на добавление информации.
function renderBook(book) {
  console.log('Пришел ответ от бекенда можно рисовать');
  console.log(book);
}

// Повторно активируем функцию "addBook", передаем ей в качестве аргумента новый объект и используем вспомогательную функцию "renderBook".
// addBook({
//   title: 'Тестовая книга по HTML',
//   author: 'Я',
//   genres: ['HTML'],
//   rating: 7,
// }).then(renderBook);


